{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Analítica Canguro API",
    "description": "Documentación de la API para los servicios que consumen las bases de datos en MongoDB para medidas de crecimiento",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:5000",
  "basePath": "/api",
  "tags": [
    {
      "name": "Medidas",
      "description": "API para consultas generales que pueden aplicar a todas las etapas."
    },
    {
      "name": "Etapa de Entorno",
      "description": "API para consultas y operaciones relacionadas con la etapa de entorno"
    },
    {
      "name": "Etapa de Nacimiento",
      "description": "API para consultas y operaciones relacionadas con la etapa de nacimiento"
    },
    {
      "name": "Etapa de Crecimiento",
      "description": "API para consultas y operaciones relacionadas con la etapa de crecimiento"
    },
    {
      "name": "Etapas",
      "description": "API para consultas y operaciones relacionadas con las etapas"
    },
    {
      "name": "Temas de Interés",
      "description": "API para consultas y operaciones relacionadas con los temas de interés"
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/entorno/RCIUaf": {
      "get": {
        "tags": ["Etapa de Entorno"],
        "summary": "GET Obtiene las frecuencias absolutas en intervalos de 5 años para las muestras con RCIU",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Datos obtenidos correctamente",
              "$ref": "#/definitions/GraphAbs"
            }
          }
        }
      }
    },
    "/entorno/RCIUrf": {
      "get": {
        "tags": ["Etapa de Entorno"],
        "summary": "GET Obtiene las frecuencias relativas en intervalos de 5 años para las muestras con RCIU",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Datos obtenidos correctamente",
              "$ref": "#/definitions/GraphRel"
            }
          }
        }
      }
    },
    "/entorno/RCIUInitrfprem": {
      "post": {
        "tags": ["Etapa de Entorno"],
        "summary": "POST Obtiene datos para graficar valores relativos para la(s) variables de entorno especificadas",
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Objeto con el query a la base de datos. (inicio, fin, vars, prem) - posibles variables: toxemia, Embarazomultiple, primipara, nivelmama, adolescentes, mayores, pesomama, tallamama, pesopapa, tallapapa, percapitasalariominimo",
            "schema": {
              "$ref": "#/definitions/Query1"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Datos obtenidos correctamente",
              "$ref": "#/definitions/GraphRel2"
            }
          }
        }
      }
    },
    "/entorno/RCIUInitafprem": {
      "post": {
        "tags": ["Etapa de Entorno"],
        "summary": "POST Obtiene datos para graficar valores absolutos para la(s) variables de entorno especificadas",
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Objeto con el query a la base de datos. (inicio, fin, vars, prem) - posibles variables: toxemia, Embarazomultiple, primipara, nivelmama, adolescentes, mayores, pesomama, tallamama, pesopapa, tallapapa, percapitasalariominimo",
            "schema": {
              "$ref": "#/definitions/Query1"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Datos obtenidos correctamente",
              "$ref": "#/definitions/GraphAbs"
            }
          }
        }
      }
    },
    "/entorno/RCIUAFMedidaMadre": {
      "get": {
        "tags": ["Etapa de Entorno"],
        "summary": "GET Obtiene datos para graficar valores absolutos para la(s) variables de entorno de medidas antropométricas",
        "parameters": [
          {
            "name": "var",
            "in": "query",
            "description": "Nombre de la variable antropométrica (pesomama, tallamama, pesopapa, tallapapa)",
            "type": "string"
          },
          {
            "name": "inicio",
            "in": "query",
            "description": "Año inicio (1993-2020)",
            "type": "integer"
          },
          {
            "name": "fin",
            "in": "query",
            "description": "Año final (1993-2020)",
            "type": "integer"
          },
          {
            "name": "prem",
            "in": "query",
            "description": "Tomar muestra prematura ( edad gestacional < 37 semanas) - escribir true o false",
            "type": "string"
          },
          {
            "name": "desde",
            "in": "query",
            "description": "Filtro aplicado a la variable (valor inicio) - escribir 0 si no aplica",
            "type": "string"
          },
          {
            "name": "hasta",
            "in": "query",
            "description": "Filtro aplicado a la variable (valor fin) - escribir 0 si no aplica",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Datos obtenidos correctamente",
              "$ref": "#/definitions/GraphAbs"
            }
          }
        }
      }
    },
    "/entorno/RCIURFEstudiosMadre": {
      "get": {
        "tags": ["Etapa de Entorno"],
        "summary": "GET Obtiene datos para graficar la distribución de nivel de estudios de la madre",
        "parameters": [
          {
            "name": "inicio",
            "in": "query",
            "description": "Año inicio (1993-2020)",
            "type": "integer"
          },
          {
            "name": "fin",
            "in": "query",
            "description": "Año final (1993-2020)",
            "type": "integer"
          },
          {
            "name": "prem",
            "in": "query",
            "description": "Tomar muestra prematura ( edad gestacional < 37 semanas) - escribir true o false",
            "type": "string"
          },
          {
            "name": "estudio",
            "in": "query",
            "description": "Filtro aplicado al nivel de estudios - (primaria, secundaria, tecnico)",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Datos obtenidos correctamente",
              "$ref": "#/definitions/GraphAbs"
            }
          }
        }
      }
    },
    "/entorno/RCIURFIngresosMadre": {
      "get": {
        "tags": ["Etapa de Entorno"],
        "summary": "GET Obtiene datos para graficar la distribución de ingresos de la mamá",
        "parameters": [
          {
            "name": "inicio",
            "in": "query",
            "description": "Año inicio (1993-2020)",
            "type": "integer"
          },
          {
            "name": "fin",
            "in": "query",
            "description": "Año final (1993-2020)",
            "type": "integer"
          },
          {
            "name": "prem",
            "in": "query",
            "description": "Tomar muestra prematura ( edad gestacional < 37 semanas) - escribir true o false",
            "type": "string"
          },
          {
            "name": "desde",
            "in": "query",
            "description": "Filtro aplicado a la variable (valor inicio) - escribir 0 si no aplica",
            "type": "string"
          },
          {
            "name": "hasta",
            "in": "query",
            "description": "Filtro aplicado a la variable (valor fin) - escribir 0 si no aplica",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Datos obtenidos correctamente",
              "$ref": "#/definitions/GraphRel"
            }
          }
        }
      }
    },
    "/entorno/RCIUAntEntornoVars": {
      "get": {
        "tags": ["Etapa de Entorno"],
        "summary": "GET Obtiene las variables disponibles para la etapa de entorno",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Datos obtenidos correctamente",
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "options": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string"
                      },
                      "tipo": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/nacimiento/RCIUFreqCesarea": {
      "post": {
        "tags": ["Etapa de Nacimiento"],
        "summary": "GET Obtiene los datos para las gráficas de frecuencia de cesárea",
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Objeto con el query a la base de datos. (inicio, fin, vars, prem)",
            "schema": {
              "$ref": "#/definitions/Query1"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Datos obtenidos correctamente",
              "$ref": "#/definitions/GraphRel"
            }
          }
        }
      }
    },
    "/nacimiento/RCIUFreqGender": {
      "post": {
        "tags": ["Etapa de Nacimiento"],
        "summary": "GET Obtiene los datos para las gráficas de frecuencia de género",
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Objeto con el query a la base de datos. (inicio, fin, vars, prem, rciu)",
            "schema": {
              "$ref": "#/definitions/Query2"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Datos obtenidos correctamente",
              "$ref": "#/definitions/GraphAbs"
            }
          }
        }
      }
    },
    "/nacimiento/RCIUFreqEdadGes": {
      "post": {
        "tags": ["Etapa de Nacimiento"],
        "summary": "GET Obtiene los datos para la gráfica de promedios de edad gestacional por rangos",
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Objeto con el query a la base de datos. (inicio, fin, vars)",
            "schema": {
              "$ref": "#/definitions/Query3"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Datos obtenidos correctamente",
              "$ref": "#/definitions/GraphRel"
            }
          }
        }
      }
    },
    "/nacimiento/RCIUFreqEGPremTerm": {
      "post": {
        "tags": ["Etapa de Nacimiento"],
        "summary": "GET Obtiene los procentajes de edad gestacional con y sin RCIU",
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Objeto con el query a la base de datos. (inicio, fin, vars)",
            "schema": {
              "$ref": "#/definitions/Query3"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Datos obtenidos correctamente",
              "type": "object",
              "properties": {
                "prematurosRCIU": {
                  "type": "integer"
                },
                "terminoRCIU": {
                  "type": "integer"
                }
              }
            }
          }
        }
      }
    },
    "/nacimiento/RCIURCEUFreq": {
      "post": {
        "tags": ["Etapa de Nacimiento"],
        "summary": "GET Obtiene los datos de las gráficas de relación RCIU y RCEU",
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Objeto con el query a la base de datos. (inicio, fin, vars, prem)",
            "schema": {
              "$ref": "#/definitions/Query1"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Datos obtenidos correctamente",
              "$ref": "#/definitions/GroupData"
            }
          }
        }
      }
    },
    "/nacimiento/RCIUAFPromMedidaBebeNacer": {
      "post": {
        "tags": ["Etapa de Nacimiento"],
        "summary": "GET Obtiene los datos de las gráficas de promedio de medidas antropométricas al nacer",
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Objeto con el query a la base de datos. (inicio, fin, vars, prem, var, desde, hasta) - Variables posibles: (pesoalnacer, tallaalnacer, pcalnacer)",
            "schema": {
              "$ref": "#/definitions/Query4"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Datos obtenidos correctamente",
              "$ref": "#/definitions/GroupData"
            }
          }
        }
      }
    },
    "/nacimiento/RCIUAntNacimientoVars": {
      "get": {
        "tags": ["Etapa de Nacimiento"],
        "summary": "GET Obtiene las variables disponibles para la etapa de nacimiento",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Datos obtenidos correctamente",
              "type": "object",
              "properties": {
                "label": {
                  "type": "string"
                },
                "options": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string"
                      },
                      "tipo": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/medidas/query": {
      "post": {
        "tags": ["Medidas"],
        "summary": "POST Envía un objeto con los elementos para el query",
        "parameters": [
          {
            "name": "query",
            "in": "body",
            "description": "Objeto con el query a la base de datos. Se pueden consultar variables y variables por etapa, temas de interés y años",
            "schema": {
              "$ref": "#/definitions/Query"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Datos obtenidos correctamente",
              "$ref": "#/definitions/MedidasCrecimiento"
            }
          }
        }
      }
    },
    "/medidas/group": {
      "post": {
        "tags": ["Medidas"],
        "summary": "POST Agrupa los datos por años y por los diferentes valores de una variable especificada",
        "parameters": [
          {
            "name": "Años y variable a agrupar",
            "in": "body",
            "description": "Se envía un arreglo con los años y la variable a agrupar.",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "string"
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/medidas/{id}": {
      "get": {
        "tags": ["Medidas"],
        "summary": "GET Documento en la colección con el id especificado",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id del documento a consultar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Datos obtenidos correctamente",
              "$ref": "#/definitions/MedidasCrecimiento"
            }
          }
        }
      }
    },
    "/medidas/query/{var}": {
      "get": {
        "tags": ["Medidas"],
        "summary": "GET Todos los valores posibles para la variable especificada",
        "parameters": [
          {
            "name": "var",
            "in": "path",
            "description": "Variable a consultar los posibles valores",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            }
          }
        }
      }
    },
    "/medidas/dict/{var}": {
      "get": {
        "tags": ["Medidas"],
        "summary": "GET Conversión a valores categóricos dependiendo del diccionario y variable especificada. Aplica para datos nominales y ordinales",
        "parameters": [
          {
            "name": "var",
            "in": "path",
            "description": "Variable a consultar los valores categóricos",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "key": {
                    "type": "integer"
                  },
                  "valor": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/medidas/datos": {
      "get": {
        "tags": ["Medidas"],
        "summary": "GET Todos los datos en la colección",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Datos obtenidos correctamente",
              "$ref": "#/definitions/MedidasCrecimiento"
            }
          }
        }
      }
    },
    "/medidas/vars": {
      "get": {
        "tags": ["Medidas"],
        "summary": "GET Todas las variables dependiendo de la etapa o tema de interés",
        "parameters": [
          {
            "name": "e",
            "in": "query",
            "description": "Etapa (ENTORNO, EMBARAZO, NACIMIENTO, 3M, 6M, 9M, 12M)",
            "type": "string"
          },
          {
            "name": "neuro",
            "in": "query",
            "description": "Tema de interés Neurología",
            "type": "string"
          },
          {
            "name": "vista",
            "in": "query",
            "description": "Tema de interés Vista",
            "type": "string"
          },
          {
            "name": "alimentacion",
            "in": "query",
            "description": "Tema de interés Alimentación",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Datos obtenidos correctamente",
              "$ref": "#/definitions/Atributos"
            }
          }
        }
      }
    },
    "/medidas/anios": {
      "get": {
        "tags": ["Medidas"],
        "summary": "GET Todos los años que cubren los datos",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Datos obtenidos correctamente",
              "$ref": "#/definitions/Anios"
            }
          }
        }
      }
    },
    "/medidas/dist": {
      "get": {
        "tags": ["Medidas"],
        "summary": "GET Distribución de datos para la variable discreta seleccionada en el año especificado",
        "parameters": [
          {
            "name": "variable",
            "in": "query",
            "description": "Nombre de la variable",
            "type": "string"
          },
          {
            "name": "anio",
            "in": "query",
            "description": "Año a consultar",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "x": {
                    "type": "integer"
                  },
                  "y": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/medidas/cont": {
      "get": {
        "tags": ["Medidas"],
        "summary": "GET Distribución de datos para la variable continua seleccionada en el año especificado",
        "parameters": [
          {
            "name": "variable",
            "in": "query",
            "description": "Nombre de la variable",
            "type": "string"
          },
          {
            "name": "anio",
            "in": "query",
            "description": "Año a consultar",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "x": {
                    "type": "integer"
                  },
                  "y": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/etapas": {
      "get": {
        "tags": ["Etapas"],
        "summary": "GET Todas las etapas",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Datos obtenidos correctamente",
              "$ref": "#/definitions/Etapas"
            }
          }
        }
      }
    },
    "/etapas/crearEtapa": {
      "post": {
        "tags": ["Etapas"],
        "summary": "POST Crear una etapa con su nombre",
        "parameters": [
          {
            "nombre": "query",
            "in": "body",
            "description": "Crear una etapa con su nombre"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Datos obtenidos correctamente",
              "$ref": "#/definitions/Etapa"
            }
          }
        }
      }
    },
    "/etapas/{id}": {
      "delete": {
        "tags": ["Etapas"],
        "summary": "DELETE Etapa por id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id de la etapa a elminar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Datos obtenidos correctamente",
              "type": "object",
              "properties": {
                "msg": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/temas": {
      "get": {
        "tags": ["Temas de Interés"],
        "summary": "GET Todos los temas de interés",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Datos obtenidos correctamente",
              "$ref": "#/definitions/Tema"
            }
          }
        }
      }
    },
    "/temas/crearTema": {
      "post": {
        "tags": ["Temas de Interés"],
        "summary": "POST Crear un tema de interés con su nombre",
        "parameters": [
          {
            "nombre": "query",
            "in": "body",
            "description": "Crear una tema de interés con su nombre"
          }
        ],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Datos obtenidos correctamente",
              "$ref": "#/definitions/Tema"
            }
          }
        }
      }
    },
    "/temas/{id}": {
      "delete": {
        "tags": ["Temas de Interés"],
        "summary": "DELETE Tema de interés por id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id del tema de interés a elminar",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Datos obtenidos correctamente",
              "type": "object",
              "properties": {
                "msg": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Anios": {
      "type": "array",
      "items": {
        "type": "integer"
      }
    },
    "Etapa": {
      "type": "object",
      "required": ["_id"],
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "nombre": {
          "type": "string"
        }
      }
    },
    "Etapas": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Etapa"
      }
    },
    "Tema": {
      "type": "object",
      "required": ["_id"],
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "nombre": {
          "type": "string"
        }
      }
    },
    "Temas": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Tema"
      }
    },
    "GraphAbs": {
      "type": "object",
      "properties": {
        "colorSet": {
          "type": "string"
        },
        "axisX": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string"
            },
            "titleFontFamily": {
              "type": "string"
            },
            "labelFontFamily": {
              "type": "string"
            },
            "titleFontStyle": {
              "type": "string"
            }
          }
        },
        "axisY": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string"
            },
            "titleFontFamily": {
              "type": "string"
            },
            "labelFontFamily": {
              "type": "string"
            },
            "titleFontStyle": {
              "type": "string"
            }
          }
        },
        "tooltip": {
          "type": "object",
          "properties": {
            "content": {
              "type": "string"
            },
            "fontFamily": {
              "type": "string"
            }
          }
        },
        "zoomEnabled": {
          "type": "boolean"
        },
        "zoomType": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "dataPoints": {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "string"
                  },
                  "y": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "height": {
          "type": "integer"
        }
      }
    },
    "GraphRel": {
      "type": "object",
      "properties": {
        "colorSet": {
          "type": "string"
        },
        "axisX": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string"
            },
            "titleFontFamily": {
              "type": "string"
            },
            "labelFontFamily": {
              "type": "string"
            },
            "titleFontStyle": {
              "type": "string"
            }
          }
        },
        "axisY": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string"
            },
            "titleFontFamily": {
              "type": "string"
            },
            "labelFontFamily": {
              "type": "string"
            },
            "titleFontStyle": {
              "type": "string"
            }
          }
        },
        "tooltip": {
          "type": "object",
          "properties": {
            "content": {
              "type": "string"
            },
            "fontFamily": {
              "type": "string"
            }
          }
        },
        "zoomEnabled": {
          "type": "boolean"
        },
        "zoomType": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string"
              },
              "dataPoints": {
                "type": "object",
                "properties": {
                  "x": {
                    "type": "integer"
                  },
                  "y": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "height": {
          "type": "integer"
        }
      }
    },
    "GraphRel2": {
      "type": "object",
      "properties": {
        "colorSet": {
          "type": "string"
        },
        "axisX": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string"
            },
            "titleFontFamily": {
              "type": "string"
            },
            "labelFontFamily": {
              "type": "string"
            },
            "titleFontStyle": {
              "type": "string"
            }
          }
        },
        "axisY": {
          "type": "object",
          "properties": {
            "title": {
              "type": "string"
            },
            "titleFontFamily": {
              "type": "string"
            },
            "labelFontFamily": {
              "type": "string"
            },
            "titleFontStyle": {
              "type": "string"
            }
          }
        },
        "tooltip": {
          "type": "object",
          "properties": {
            "content": {
              "type": "string"
            },
            "fontFamily": {
              "type": "string"
            }
          }
        },
        "zoomEnabled": {
          "type": "boolean"
        },
        "zoomType": {
          "type": "string"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "markerSize": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              },
              "showInLegend": {
                "type": "boolean"
              },
              "type": {
                "type": "string"
              },
              "dataPoints": {
                "type": "object",
                "properties": {
                  "x": {
                    "type": "integer"
                  },
                  "y": {
                    "type": "integer"
                  },
                  "absolute": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "height": {
          "type": "integer"
        }
      }
    },
    "GroupData": {
      "type": "object",
      "properties": {
        "labels": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "datasets": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "label": {
                "type": "string"
              },
              "data": {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "backgroundColor": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "Group": {
      "type": "object",
      "properties": {
        "years": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "vars": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Query1": {
      "type": "object",
      "properties": {
        "inicio": {
          "type": "integer"
        },
        "fin": {
          "type": "integer"
        },
        "vars": {
          "type:": "array",
          "items": {
            "type": "string"
          }
        },
        "prem": {
          "type": "boolean"
        }
      }
    },
    "Query2": {
      "type": "object",
      "properties": {
        "inicio": {
          "type": "integer"
        },
        "fin": {
          "type": "integer"
        },
        "rciu": {
          "type:": "string"
        },
        "vars": {
          "type:": "array",
          "items": {
            "type": "string"
          }
        },
        "prem": {
          "type": "boolean"
        }
      }
    },
    "Query3": {
      "type": "object",
      "properties": {
        "inicio": {
          "type": "integer"
        },
        "fin": {
          "type": "integer"
        },
        "vars": {
          "type:": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Query4": {
      "type": "object",
      "properties": {
        "inicio": {
          "type": "integer"
        },
        "fin": {
          "type": "integer"
        },
        "var": {
          "type:": "string"
        },
        "vars": {
          "type:": "array",
          "items": {
            "type": "string"
          }
        },
        "prem": {
          "type": "string"
        },
        "desde": {
          "type": "string"
        },
        "hasta": {
          "type": "string"
        }
      }
    },
    "Atributos": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "MedidasCrecimiento": {
      "required": ["_id"],
      "properties": {
        "_id": {
          "type": "string",
          "uniqueItems": true
        },
        "CODE": {
          "type": "integer"
        },
        "Centro": {
          "type": "integer"
        },
        "codigooriginal": {
          "type": "integer"
        },
        "estadovital": {
          "type": "integer"
        },
        "muerteprimerano": {
          "type": "integer"
        },
        "ANOCAT": {
          "type": "integer"
        },
        "nivelmama": {
          "type": "integer"
        },
        "nivelpapa": {
          "type": "integer"
        },
        "embarazodeseado": {
          "type": "integer"
        },
        "edadmama": {
          "type": "integer"
        },
        "pesomama": {
          "type": "integer"
        },
        "tallamama": {
          "type": "integer"
        },
        "pesopapa": {
          "type": "integer"
        },
        "tallapapa": {
          "type": "integer"
        },
        "Embarazomultple": {
          "type": "integer"
        },
        "numerocontrolprenatal": {
          "type": "integer"
        },
        "pesoalnacer": {
          "type": "integer"
        },
        "tallaalnacer": {
          "type": "integer"
        },
        "pcalnacer": {
          "type": "integer"
        },
        "sexo": {
          "type": "integer"
        },
        "edadgestacional": {
          "type": "integer"
        },
        "edadgestacional2": {
          "type": "integer"
        },
        "classificacionlubchenco": {
          "type": "integer"
        },
        "TotalDiasHospitalizacion": {
          "type": "integer"
        },
        "toxemia": {
          "type": "integer"
        },
        "UCI": {
          "type": "integer"
        },
        "cesarea": {
          "type": "integer"
        },
        "primipara": {
          "type": "integer"
        },
        "trimestre": {
          "type": "integer"
        },
        "VAR00002": {
          "type": "integer"
        },
        "oftalmologiafinal": {
          "type": "integer"
        },
        "ROP": {
          "type": "integer"
        },
        "resoptometria": {
          "type": "integer"
        },
        "audiometria": {
          "type": "integer"
        },
        "edadalaentrada": {
          "type": "integer"
        },
        "pesoalaentrada": {
          "type": "integer"
        },
        "tallaalaentrada": {
          "type": "integer"
        },
        "PCalaentrada": {
          "type": "integer"
        },
        "edadgestacionalalaentrada": {
          "type": "integer"
        },
        "edadgestacionalalaentrada2": {
          "type": "integer"
        },
        "PesosalidaPC": {
          "type": "integer"
        },
        "edadsalidaPC": {
          "type": "integer"
        },
        "edadgestasalPC": {
          "type": "integer"
        },
        "Infanib3m": {
          "type": "integer"
        },
        "Infanib6m": {
          "type": "integer"
        },
        "Infanib9m": {
          "type": "integer"
        },
        "Infanib12m": {
          "type": "integer"
        },
        "CD6": {
          "type": "integer"
        },
        "CD12": {
          "type": "integer"
        },
        "mes40": {
          "type": "integer"
        },
        "mes3": {
          "type": "integer"
        },
        "mes6": {
          "type": "integer"
        },
        "mes9": {
          "type": "integer"
        },
        "mes12": {
          "type": "integer"
        },
        "alisalida": {
          "type": "integer"
        },
        "Indexnutricion40sem": {
          "type": "integer"
        },
        "Indexnutricion12meses": {
          "type": "integer"
        },
        "oxigenoentrada": {
          "type": "integer"
        },
        "percapitasalariominimo": {
          "type": "integer"
        },
        "RCIUpesoFenton": {
          "type": "integer"
        },
        "RCIUtalla": {
          "type": "integer"
        },
        "RCIUPC": {
          "type": "integer"
        },
        "RCIUpesoFentonentrada": {
          "type": "integer"
        },
        "RCIUtallaentrada": {
          "type": "integer"
        },
        "RCIUPCentrada": {
          "type": "integer"
        },
        "RCIUfentonpesotalla": {
          "type": "integer"
        },
        "RCIUfentonpesotallaPC": {
          "type": "integer"
        },
        "CD66": {
          "type": "integer"
        },
        "CD122": {
          "type": "integer"
        },
        "tipoRCIU": {
          "type": "integer"
        },
        "tipoRCIU2": {
          "type": "integer"
        },
        "pesoalnacer_Normalizado": {
          "type": "integer"
        },
        "pesoalaentrada_Normalizado": {
          "type": "integer"
        },
        "fechaCreacion": {
          "type": "date"
        },
        "Nutpcwho": {
          "type": "object",
          "properties": {
            "sem40": {
              "type": "integer"
            },
            "mes3": {
              "type": "integer"
            },
            "mes6": {
              "type": "integer"
            },
            "mes9": {
              "type": "integer"
            },
            "mes12": {
              "type": "integer"
            }
          }
        },
        "Nutpesowho": {
          "type": "object",
          "properties": {
            "sem40": {
              "type": "integer"
            },
            "mes3": {
              "type": "integer"
            },
            "mes6": {
              "type": "integer"
            },
            "mes9": {
              "type": "integer"
            },
            "mes12": {
              "type": "integer"
            }
          }
        },
        "Nuttallawho": {
          "type": "object",
          "properties": {
            "sem40": {
              "type": "integer"
            },
            "mes3": {
              "type": "integer"
            },
            "mes6": {
              "type": "integer"
            },
            "mes9": {
              "type": "integer"
            },
            "mes12": {
              "type": "integer"
            }
          }
        },
        "pc": {
          "type": "object",
          "properties": {
            "sem40": {
              "type": "integer"
            },
            "mes3": {
              "type": "integer"
            },
            "mes6": {
              "type": "integer"
            },
            "mes9": {
              "type": "integer"
            },
            "mes12": {
              "type": "integer"
            },
            "error": {
              "type": "boolean"
            },
            "sem33": {
              "type": "integer"
            },
            "outlier": {
              "type": "boolean"
            }
          }
        },
        "talla": {
          "type": "object",
          "properties": {
            "sem40": {
              "type": "integer"
            },
            "mes3": {
              "type": "integer"
            },
            "mes6": {
              "type": "integer"
            },
            "mes9": {
              "type": "integer"
            },
            "mes12": {
              "type": "integer"
            },
            "error": {
              "type": "boolean"
            },
            "sem33": {
              "type": "integer"
            },
            "outlier": {
              "type": "boolean"
            }
          }
        },
        "peso": {
          "type": "object",
          "properties": {
            "sem40": {
              "type": "integer"
            },
            "mes3": {
              "type": "integer"
            },
            "mes6": {
              "type": "integer"
            },
            "mes9": {
              "type": "integer"
            },
            "mes12": {
              "type": "integer"
            },
            "error": {
              "type": "boolean"
            },
            "sem33": {
              "type": "integer"
            },
            "outlier": {
              "type": "boolean"
            }
          }
        },
        "alimentacion": {
          "type": "object",
          "properties": {
            "sem40": {
              "type": "integer"
            },
            "mes3": {
              "type": "integer"
            },
            "mes6": {
              "type": "integer"
            },
            "mes9": {
              "type": "integer"
            },
            "mes12": {
              "type": "integer"
            }
          }
        },
        "peso_normalizado": {
          "type": "object",
          "properties": {
            "sem33": {
              "type": "integer"
            },
            "sem40": {
              "type": "integer"
            },
            "mes3": {
              "type": "integer"
            },
            "mes6": {
              "type": "integer"
            },
            "mes9": {
              "type": "integer"
            },
            "mes12": {
              "type": "integer"
            }
          }
        },
        "talla_normalizado": {
          "type": "object",
          "properties": {
            "sem33": {
              "type": "integer"
            },
            "sem40": {
              "type": "integer"
            },
            "mes3": {
              "type": "integer"
            },
            "mes6": {
              "type": "integer"
            },
            "mes9": {
              "type": "integer"
            },
            "mes12": {
              "type": "integer"
            }
          }
        },
        "pc_normalizado": {
          "type": "object",
          "properties": {
            "sem33": {
              "type": "integer"
            },
            "sem40": {
              "type": "integer"
            },
            "mes3": {
              "type": "integer"
            },
            "mes6": {
              "type": "integer"
            },
            "mes9": {
              "type": "integer"
            },
            "mes12": {
              "type": "integer"
            }
          }
        },
        "neurologia": {
          "type": "object",
          "properties": {
            "error": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "Medidas": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/MedidasCrecimiento"
      }
    }
  }
}
